[gd_resource type="VisualShader" load_steps=9 format=2]

[sub_resource type="VisualShaderNodeInput" id=16]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id=17]
input_name = "camera"

[sub_resource type="VisualShaderNodeTransformVecMult" id=18]

[sub_resource type="VisualShaderNodeVectorDistance" id=19]

[sub_resource type="VisualShaderNodeVec3Uniform" id=20]
uniform_name = "SourcePosition"

[sub_resource type="VisualShaderNodeScalarUniform" id=21]
uniform_name = "MaxDistance"

[sub_resource type="VisualShaderNodeCompare" id=22]
function = 5

[sub_resource type="VisualShaderNodeColorUniform" id=24]
uniform_name = "Color"

[resource]
code = "shader_type spatial;
render_mode cull_disabled, specular_schlick_ggx;




void vertex() {
// Output:0

}

void fragment() {
// Output:0

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -613.256, 105.5 )
modes/cull = 2
nodes/fragment/2/node = SubResource( 16 )
nodes/fragment/2/position = Vector2( -520, 300 )
nodes/fragment/3/node = SubResource( 17 )
nodes/fragment/3/position = Vector2( -500, 220 )
nodes/fragment/4/node = SubResource( 18 )
nodes/fragment/4/position = Vector2( -320, 220 )
nodes/fragment/5/node = SubResource( 19 )
nodes/fragment/5/position = Vector2( -60, 160 )
nodes/fragment/6/node = SubResource( 20 )
nodes/fragment/6/position = Vector2( -280, 140 )
nodes/fragment/7/node = SubResource( 21 )
nodes/fragment/7/position = Vector2( -100, 280 )
nodes/fragment/8/node = SubResource( 22 )
nodes/fragment/8/position = Vector2( 100, 180 )
nodes/fragment/9/node = SubResource( 24 )
nodes/fragment/9/position = Vector2( 100, 40 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 2, 0, 4, 1, 4, 0, 5, 1, 6, 0, 5, 0, 7, 0, 8, 1, 5, 0, 8, 0, 3, 0, 4, 0, 2, 0, 4, 1, 4, 0, 5, 1, 6, 0, 5, 0, 7, 0, 8, 1, 5, 0, 8, 0 )
